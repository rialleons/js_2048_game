{"version":3,"sources":["scripts/main.js"],"names":["clone","items","map","item","Array","isArray","button","document","querySelector","cells","querySelectorAll","gameScore","startMessage","messageWin","messageLose","field","score","moveUp","gameField","totalScore","innerScore","pushUp","j","length","position","i","tmp","matchUp","moveDown","pushDown","matchDown","moveRight","pushRight","matchRight","moveLeft","pushLeft","matchLeft","createField","fillRandomCell","synchronizeCellsAndScore","randomRow","Math","floor","random","randomColumn","plainPosition","classList","remove","textContent","add","hasEmptyCell","includes","checkWin","addEventListener","contains","keyEvent","copyField","key","Error","JSON","stringify","copyFieldAfterMove"],"mappings":"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","file":"main.d65e9713.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst clone = (items) => items\n  .map(item => Array.isArray(item) ? clone(item) : item);\n\nconst button = document.querySelector('.button');\nconst cells = document.querySelectorAll('.field-cell');\nconst gameScore = document.querySelector('.game-score');\nconst startMessage = document.querySelector('.message-start');\nconst messageWin = document.querySelector('.message-win');\nconst messageLose = document.querySelector('.message-lose');\n\nlet field = [];\nlet score = 0;\n\nbutton.addEventListener('click', () => {\n  if (button.classList.contains('start')) {\n    button.classList.remove('start');\n    button.classList.add('restart');\n    startMessage.classList.add('hidden');\n    button.textContent = 'Restart';\n  }\n\n  field = createField();\n  score = 0;\n  gameScore.textContent = score;\n  messageLose.classList.add('hidden');\n});\n\ndocument.addEventListener('keydown', keyEvent => {\n  const copyField = clone(field);\n\n  switch (keyEvent.key) {\n    case 'ArrowUp':\n      score = moveUp(field, score);\n      break;\n\n    case 'ArrowDown':\n      score = moveDown(field, score);\n      break;\n\n    case 'ArrowRight':\n      score = moveRight(field, score);\n      break;\n\n    case 'ArrowLeft':\n      score = moveLeft(field, score);\n      break;\n\n    default:\n      throw new Error('Wrong key!');\n  }\n\n  if (checkWin(field)) {\n    messageWin.classList.remove('hidden');\n  }\n\n  if (hasEmptyCell(field)\n    && JSON.stringify(copyField) !== JSON.stringify(field)) {\n    fillRandomCell(field);\n  }\n\n  if (!hasEmptyCell(field)) {\n    const copyFieldAfterMove = clone(field);\n\n    moveUp(copyFieldAfterMove, 0);\n    moveDown(copyFieldAfterMove, 0);\n    moveRight(copyFieldAfterMove, 0);\n    moveLeft(copyFieldAfterMove, 0);\n\n    if (JSON.stringify(copyFieldAfterMove) === JSON.stringify(field)) {\n      messageLose.classList.remove('hidden');\n    }\n  }\n\n  synchronizeCellsAndScore(field);\n});\n\nfunction moveUp(gameField, totalScore) {\n  let innerScore = 0;\n\n  function pushUp() {\n    for (let j = 0; j < gameField.length; j++) {\n      let position = 0;\n\n      for (let i = 0; i < gameField[j].length; i++) {\n        if (gameField[i][j] !== '') {\n          const tmp = gameField[i][j];\n\n          gameField[i][j] = gameField[position][j];\n          gameField[position][j] = tmp;\n          position++;\n        }\n      }\n    }\n  }\n\n  function matchUp() {\n    for (let j = 0; j < gameField.length; j++) {\n      for (let i = 1; i < gameField[j].length; i++) {\n        if (gameField[i][j] === gameField[i - 1][j]) {\n          gameField[i - 1][j] += gameField[i][j];\n          innerScore += +gameField[i - 1][j];\n          gameField[i][j] = '';\n        }\n      }\n    }\n  }\n\n  pushUp();\n  matchUp();\n  pushUp();\n\n  return totalScore + innerScore;\n}\n\nfunction moveDown(gameField, totalScore) {\n  let innerScore = 0;\n\n  function pushDown() {\n    for (let j = 0; j < gameField.length; j++) {\n      let position = gameField[j].length - 1;\n\n      for (let i = gameField[j].length - 1; i >= 0; i--) {\n        if (gameField[i][j] !== '') {\n          const tmp = gameField[i][j];\n\n          gameField[i][j] = gameField[position][j];\n          gameField[position][j] = tmp;\n          position--;\n        }\n      }\n    }\n  }\n\n  function matchDown() {\n    for (let j = 0; j < gameField.length; j++) {\n      for (let i = gameField[j].length - 1; i > 0; i--) {\n        if (gameField[i][j] === gameField[i - 1][j]) {\n          gameField[i - 1][j] += gameField[i][j];\n          innerScore += +gameField[i - 1][j];\n          gameField[i][j] = '';\n        }\n      }\n    }\n  }\n\n  pushDown();\n  matchDown();\n  pushDown();\n\n  return totalScore + innerScore;\n}\n\nfunction moveRight(gameField, totalScore) {\n  let innerScore = 0;\n\n  function pushRight() {\n    for (let i = 0; i < gameField.length; i++) {\n      let position = gameField[i].length - 1;\n\n      for (let j = gameField[i].length - 1; j >= 0; j--) {\n        if (gameField[i][j] !== '') {\n          const tmp = gameField[i][j];\n\n          gameField[i][j] = gameField[i][position];\n          gameField[i][position] = tmp;\n          position--;\n        }\n      }\n    }\n  }\n\n  function matchRight() {\n    for (let i = 0; i < gameField.length; i++) {\n      for (let j = gameField[i].length - 1; j > 0; j--) {\n        if (gameField[i][j] === gameField[i][j - 1]) {\n          gameField[i][j - 1] += gameField[i][j];\n          innerScore += +gameField[i][j - 1];\n          gameField[i][j] = '';\n        }\n      }\n    }\n  }\n\n  pushRight();\n  matchRight();\n  pushRight();\n\n  return totalScore + innerScore;\n}\n\nfunction moveLeft(gameField, totalScore) {\n  let innerScore = 0;\n\n  function pushLeft() {\n    for (let i = 0; i < gameField.length; i++) {\n      let position = 0;\n\n      for (let j = 0; j < gameField[i].length; j++) {\n        if (gameField[i][j] !== '') {\n          const tmp = gameField[i][j];\n\n          gameField[i][j] = gameField[i][position];\n          gameField[i][position] = tmp;\n          position++;\n        }\n      }\n    }\n  }\n\n  function matchLeft() {\n    for (let i = 0; i < gameField.length; i++) {\n      for (let j = 1; j < gameField[i].length; j++) {\n        if (gameField[i][j] === gameField[i][j - 1]) {\n          gameField[i][j - 1] += gameField[i][j];\n          innerScore += +gameField[i][j - 1];\n          gameField[i][j] = '';\n        }\n      }\n    }\n  }\n\n  pushLeft();\n  matchLeft();\n  pushLeft();\n\n  return totalScore + innerScore;\n}\n\nfunction createField() {\n  const gameField\n  = [['', '', '', ''],\n    ['', '', '', ''],\n    ['', '', '', ''],\n    ['', '', '', '']];\n\n  fillRandomCell(gameField);\n  fillRandomCell(gameField);\n  synchronizeCellsAndScore(gameField);\n\n  return gameField;\n}\n\nfunction fillRandomCell(gameField) {\n  const randomRow = Math.floor(Math.random() * 4);\n  const randomColumn = Math.floor(Math.random() * 4);\n\n  if (gameField[randomRow][randomColumn] === '') {\n    if (Math.random() < 0.9) {\n      gameField[randomRow][randomColumn] = 2;\n    } else {\n      gameField[randomRow][randomColumn] = 4;\n    }\n  } else {\n    fillRandomCell(gameField);\n  }\n}\n\nfunction synchronizeCellsAndScore(gameField) {\n  for (let i = 0; i < gameField.length; i++) {\n    for (let j = 0; j < gameField[i].length; j++) {\n      const plainPosition = i * 4 + j;\n\n      cells[plainPosition].classList\n        .remove(`field-cell--${cells[plainPosition].textContent}`);\n      cells[plainPosition].textContent = gameField[i][j];\n\n      if (gameField[i][j] !== '') {\n        cells[plainPosition].classList\n          .add(`field-cell--${cells[plainPosition].textContent}`);\n      }\n    }\n  }\n\n  gameScore.textContent = score;\n}\n\nfunction hasEmptyCell(gameField) {\n  for (let i = 0; i < gameField.length; i++) {\n    if (gameField[i].includes('')) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction checkWin(gameField) {\n  for (let i = 0; i < gameField.length; i++) {\n    if (gameField[i].includes(2048)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n"]}